var annotated_dup =
[
    [ "cnpy", null, [
      [ "NpyArray", "structcnpy_1_1_npy_array.html", "structcnpy_1_1_npy_array" ]
    ] ],
    [ "AC", "class_a_c.html", "class_a_c" ],
    [ "activation_function", "classactivation__function.html", "classactivation__function" ],
    [ "adam", "classadam.html", "classadam" ],
    [ "Base64", "class_base64.html", null ],
    [ "CACLA", "class_c_a_c_l_a.html", "class_c_a_c_l_a" ],
    [ "cart_pole", "classcart__pole.html", "classcart__pole" ],
    [ "cart_pole_experiment", "classcart__pole__experiment.html", "classcart__pole__experiment" ],
    [ "continuous_exploration", "classcontinuous__exploration.html", "classcontinuous__exploration" ],
    [ "DDPG", "class_d_d_p_g.html", "class_d_d_p_g" ],
    [ "dense_layer", "classdense__layer.html", "classdense__layer" ],
    [ "discrete_exploration", "classdiscrete__exploration.html", "classdiscrete__exploration" ],
    [ "DQN", "class_d_q_n.html", "class_d_q_n" ],
    [ "exponential_interpolation", "classexponential__interpolation.html", "classexponential__interpolation" ],
    [ "FFN", "class_f_f_n.html", "class_f_f_n" ],
    [ "forward_model", "classforward__model.html", "classforward__model" ],
    [ "id_generator", "classid__generator.html", null ],
    [ "ienvironment", "classienvironment.html", "classienvironment" ],
    [ "igate", "classigate.html", "classigate" ],
    [ "iinterpolation", "classiinterpolation.html", "classiinterpolation" ],
    [ "linear_function", "classlinear__function.html", "classlinear__function" ],
    [ "linear_interpolation", "classlinear__interpolation.html", "classlinear__interpolation" ],
    [ "linear_operator", "classlinear__operator.html", "classlinear__operator" ],
    [ "logger", "classlogger.html", "classlogger" ],
    [ "loss_function", "classloss__function.html", "classloss__function" ],
    [ "maze", "classmaze.html", "classmaze" ],
    [ "maze_experiment", "classmaze__experiment.html", "classmaze__experiment" ],
    [ "mdp_transition", "structmdp__transition.html", "structmdp__transition" ],
    [ "metacritic", "classmetacritic.html", "classmetacritic" ],
    [ "metrics", "classmetrics.html", null ],
    [ "mountain_car", "classmountain__car.html", "classmountain__car" ],
    [ "mountain_car_experiment", "classmountain__car__experiment.html", "classmountain__car__experiment" ],
    [ "mse_function", "classmse__function.html", "classmse__function" ],
    [ "neural_network", "classneural__network.html", "classneural__network" ],
    [ "optimizer", "classoptimizer.html", "classoptimizer" ],
    [ "ounoise", "classounoise.html", "classounoise" ],
    [ "param", "classparam.html", "classparam" ],
    [ "param_model", "classparam__model.html", "classparam__model" ],
    [ "policy_gradient", "classpolicy__gradient.html", "classpolicy__gradient" ],
    [ "QAC", "class_q_a_c.html", "class_q_a_c" ],
    [ "Qlearning", "class_qlearning.html", "class_qlearning" ],
    [ "radam", "classradam.html", "classradam" ],
    [ "random_generator", "classrandom__generator.html", "classrandom__generator" ],
    [ "relu_function", "classrelu__function.html", "classrelu__function" ],
    [ "replay_buffer", "classreplay__buffer.html", "classreplay__buffer" ],
    [ "SARSA", "class_s_a_r_s_a.html", "class_s_a_r_s_a" ],
    [ "sgd", "classsgd.html", "classsgd" ],
    [ "sigmoid_function", "classsigmoid__function.html", "classsigmoid__function" ],
    [ "simple_continuous_env", "classsimple__continuous__env.html", "classsimple__continuous__env" ],
    [ "softmax_function", "classsoftmax__function.html", "classsoftmax__function" ],
    [ "tanh_function", "classtanh__function.html", "classtanh__function" ],
    [ "tanhexp_function", "classtanhexp__function.html", "classtanhexp__function" ],
    [ "TD", "class_t_d.html", "class_t_d" ],
    [ "tensor", "classtensor.html", "classtensor" ],
    [ "tensor_gpu", "classtensor__gpu.html", "classtensor__gpu" ],
    [ "tensor_initializer", "classtensor__initializer.html", "classtensor__initializer" ],
    [ "tensor_operator_cpu", "classtensor__operator__cpu.html", null ],
    [ "tensor_operator_gpu", "classtensor__operator__gpu.html", null ],
    [ "variable", "classvariable.html", "classvariable" ]
];